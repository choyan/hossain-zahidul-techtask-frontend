[{"/media/choyan/Work & Education3/Workground/Current Works/practice/ofload/hossain-zahidul-techtask-frontend/src/App.js":"1","/media/choyan/Work & Education3/Workground/Current Works/practice/ofload/hossain-zahidul-techtask-frontend/src/reportWebVitals.js":"2","/media/choyan/Work & Education3/Workground/Current Works/practice/ofload/hossain-zahidul-techtask-frontend/src/utils/index.js":"3","/media/choyan/Work & Education3/Workground/Current Works/practice/ofload/hossain-zahidul-techtask-frontend/src/services/ingredients.js":"4","/media/choyan/Work & Education3/Workground/Current Works/practice/ofload/hossain-zahidul-techtask-frontend/src/utils/api.js":"5","/media/choyan/Work & Education3/Workground/Current Works/practice/ofload/hossain-zahidul-techtask-frontend/src/utils/formatDate.js":"6"},{"size":4362,"mtime":1614738340938,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1614257764492,"results":"9","hashOfConfig":"8"},{"size":39,"mtime":1614710361238,"results":"10","hashOfConfig":"8"},{"size":140,"mtime":1614710735474,"results":"11","hashOfConfig":"8"},{"size":159,"mtime":1614710321666,"results":"12","hashOfConfig":"8"},{"size":324,"mtime":1614731763139,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1w5oaxd",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/choyan/Work & Education3/Workground/Current Works/practice/ofload/hossain-zahidul-techtask-frontend/src/App.js",["27"],"import { useEffect, useState } from 'react';\nimport { getIngredients } from 'services/ingredients';\nimport { API, formatDate } from 'utils';\n\n\nexport default function App() {\n\n  const [date, setDate] = useState('2020-11-19');\n  const [ingredients, setIngredients] = useState([])\n  const [currentIngredients, setCurrentIngredients] = useState([]);\n\n  const changeDate = (e) => setDate(formatDate(new Date(e.target.value)));\n\n  const addToCurrentIngredients = (e) => setCurrentIngredients(currentIngredients => [...currentIngredients, e.target.value]);\n\n  const removeFromCurrentIngredients = (item) => {\n    setCurrentIngredients(currentIngredients => currentIngredients.filter((ingredient) => ingredient !== item));\n  }\n\n  const compareDate = (useBy) => {\n    if ((new Date(date).getTime()) <= (new Date(useBy).getTime())) {\n      return false\n    }\n    return true;\n  }\n\n  const getRecipes = () => {\n    setTimeout(() => {\n      console.log(currentIngredients);\n      // try {\n      //   // getRecipes()\n      // } catch(e) {\n      //   console.log(e);\n      // }\n    }, 200);\n  }\n\n  useEffect(() => {\n    console.log(currentIngredients);\n  }, [currentIngredients])\n\n  useEffect(() => {\n    setTimeout(async () => {\n      try {\n        const res = await getIngredients();\n        setIngredients(res);\n      } catch (e) {\n        console.log(e);\n      }\n    }, 200);\n  }, [])\n\n\n  return (\n    <div className='container mx-auto'>\n      <div className='w-2/3 mx-auto my-16'>\n        <div className='bg-white px-4 py-6 shadow overflow-hidden sm:rounded-lg'>\n          <div className='my-4'>\n            <h3 className='text-xl leading-6 font-medium text-gray-900'>Find Recipe.</h3>\n          </div>\n\n          <div className='my-4'>\n            <div className='sm:col-span-3'>\n              <label htmlFor='first_name' className='block text-sm font-medium text-gray-700'>\n                Lunch Date\n              </label>\n              <div className='mt-1'>\n                <input\n                  type='date' name='date' id='date'\n                  onChange={changeDate}\n                  value={date}\n                  className='shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md' />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-span-12 md:col-span-1 mr-3\">\n            <label htmlFor=\"user_id\" className=\"block text-sm font-medium text-gray-700\">\n              Kullanıcı Adı\n            </label>\n\n            {ingredients.length > 0 ? (\n              <select\n                id=\"user_id\"\n                name=\"user_id\"\n                onChange={addToCurrentIngredients}\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\n              >\n                {ingredients.map((user) => (\n                  <option key={user.title} value={user.title} disabled={(compareDate(user['use-by'])) ? true : null}>\n                    {user.title}\n                  </option>\n                ))}\n              </select>\n            ) : (\n                <span className=\"text-sm\">Hiç User Bulunamadık</span>\n              )}\n          </div>\n\n          {\n            currentIngredients.length > 0 && (\n              currentIngredients.map((ingredient, index) => (\n                <span class=\"inline-flex rounded-full items-center py-0.5 pl-2.5 pr-1 text-sm font-medium bg-indigo-100 text-indigo-700\">\n                  {ingredient}\n                  <button type=\"button\" onClick={() => removeFromCurrentIngredients(ingredient)} class=\"flex-shrink-0 ml-0.5 h-4 w-4 rounded-full inline-flex items-center justify-center text-indigo-400 hover:bg-indigo-200 hover:text-indigo-500 focus:outline-none focus:bg-indigo-500 focus:text-white\">\n                    <span class=\"sr-only\">Remove Ingredient</span>\n                    <svg class=\"h-2 w-2\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 8 8\">\n                      <path stroke-linecap=\"round\" stroke-width=\"1.5\" d=\"M1 1l6 6m0-6L1 7\" />\n                    </svg>\n                  </button>\n                </span>\n              ))\n            )\n          }\n\n          <div className=\"px-4 py-2.5 bg-indigo-500\" onClick={getRecipes}>Search</div>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n","/media/choyan/Work & Education3/Workground/Current Works/practice/ofload/hossain-zahidul-techtask-frontend/src/reportWebVitals.js",[],"/media/choyan/Work & Education3/Workground/Current Works/practice/ofload/hossain-zahidul-techtask-frontend/src/utils/index.js",[],"/media/choyan/Work & Education3/Workground/Current Works/practice/ofload/hossain-zahidul-techtask-frontend/src/services/ingredients.js",[],"/media/choyan/Work & Education3/Workground/Current Works/practice/ofload/hossain-zahidul-techtask-frontend/src/utils/api.js",[],"/media/choyan/Work & Education3/Workground/Current Works/practice/ofload/hossain-zahidul-techtask-frontend/src/utils/formatDate.js",[],{"ruleId":"28","severity":1,"message":"29","line":3,"column":10,"nodeType":"30","messageId":"31","endLine":3,"endColumn":13},"no-unused-vars","'API' is defined but never used.","Identifier","unusedVar"]